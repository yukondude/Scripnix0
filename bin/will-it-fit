#!/bin/bash
# $Id$
#
# Displays whether the given file(s) are small enough, in total, to fit on
# various optical disk formats. There may be some discrepancy owing to recording
# methods.
#
# This file is a part of Scripnix <http://scripnix.googlecode.com/>.
# Written in 2010 by Dave Rogers <yukondude-strudel-gmail-fullstop-com>.
# This script is released into the Public Domain.

source /usr/local/bin/bin.bash

check_arg_count ${0} ${#} 1 -1 '<file>[...]'

media[1]="74-minute CD-ROM"
msize[1]=783216000
media[2]="Single-layer DVD+R"
msize[2]=4700372992
media[3]="Single-layer DVD-R"
msize[3]=4707319808
media[4]="Double-layer DVD+R"
msize[4]=8543666176
media[5]="Double-layer DVD-R"
msize[5]=8547991552
media[6]="Single-layer Blue-ray"
msize[6]=25025314816
media[7]="Double-layer Blue-ray"
msize[7]=50050629632

files="$*"
count="$#"
total_b=0

while [[ -n "${1}" ]] ; do
    file="${1}"
    size=$(stat --format %s "${file}")
    total_b=$(( total_b + size ))
    shift
done

total_kb=$(echo "${total_b}/1024" | bc -l)
total_mb=$(echo "${total_kb}/1024" | bc -l)
total_gb=$(echo "${total_mb}/1024" | bc -l)

if [[ ${count} -ne 1 ]] ; then echo -n "The set of files" ; else echo -n "The file" ; fi
echo ": ${files}"
printf "With a total size of: %dB = %0.1fKB = %0.1fMB = %0.1fGB\n" ${total_b} ${total_kb} ${total_mb} ${total_gb}

fits=0

for i in 1 2 3 4 5 6 7 ; do
   if [[ ${total_b} -le ${msize[i]} ]] ; then
       echo -n "Fits"
       fits=1
   else
       echo -n "Does not fit"
   fi

   msize_gb=$(echo "${msize[i]}/1024/1024/1024" | bc -l)
   printf " on a %s disc (%0.1fGB).\n" "${media[i]}" ${msize_gb}
done
