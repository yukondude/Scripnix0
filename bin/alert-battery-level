#!/bin/bash
# $Id$
#
# Alert the user of a charging or discharging battery level threshold by playing
# an audible alarm. This script requires mplayer (oh, and a battery). Schedule
# this script as part of a regular cron job so that it runs periodically. For
# example, add these two lines (with alarm sounds, perhaps from
# /usr/share/sounds/) to your account's crontab:
# 
# *   * * * * /usr/local/bin/alert-battery-level discharging 10 <sound-file>
# */5 * * * * /usr/local/bin/alert-battery-level charging 95 <sound-file>
# 
# (I like to be alerted of a charged battery so that I can unplug and prolong
# the battery's life.)
#
# This file is a part of Scripnix <http://scripnix.googlecode.com/>.
# Written in 2010 by Dave Rogers <yukondude-strudel-gmail-fullstop-com>.
# This script is released into the Public Domain.

source /usr/local/bin/bin.bash

check_arg_count ${0} ${#} 3 3 'charging|discharging <level> <alarm>'

state="${1}"
threshold="${2}"
alarm="${3}"

# Extract the battery power level for this state.
power=$(acpi --battery | 
    egrep --ignore-case "battery.* ${state}" | 
    head --lines=1 | 
    sed --regexp-extended --expression="s/^.* ${state}, ([0-9]{1,3})%.*$/\1/i")

# If the power level is beyond the threshold, sound the alarm.
if [[ -n "${power}" && -f "${alarm}" ]] ; then
    if [[ "${state}" == "charging" && "${power}" -ge "${threshold}" || "${state}" == "discharging" && "${power}" -le "${threshold}" ]] ; then
        mplayer "${alarm}" >/dev/null 2>&1
    fi 
fi
