#!/bin/bash
# $Id$
#
# Encrypt the contents of the given source directory into large date-stamped
# files in the destination directory that are suitable for burning to a 4.7GiB
# DVD (ISO 9660). Because the DVD format has a maximum file size of less than
# 4GiB, the output files are limited to 2,200MB so that two can fit on each disc.
# Use the decrypt-from-dvd script to reverse the process.
#
# This file is a part of Scripnix <https://github.com/yukondude/Scripnix/>.
# Written in 2010 by Dave Rogers <yukondude.com>
# This is free and unencumbered software released into the public domain.
# Refer to the LICENCE file for the not-so-fine print.

scriproot="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source $scriproot/bin.bash

check_arg_count ${0} ${#} 3 3 '<source-directory-path> <destination-directory> <archive-name>' ${1}

source="${1}"
sink="${2}"
archive="${3}"
today=$(date +%Y%m%d)

if [[ ! -d "${source}" ]] ; then
    echo_err "Source directory ${source} does not exist."
    exit 1
fi

if [[ ! -d "${sink}" || ! -w "${sink}" ]] ; then
    mkdir "${sink}" 2>/dev/null

    if [[ $? -ne 0 ]] ; then
        echo_err "Can't create destination directory ${sink}."
        exit 1
    fi
fi

# Clean up any existing encrypted files with the same archive name.
cd "${sink}"
rm --force "${archive}"-*.tar.gpg.*

# Tar the source directory files together, encrypt the tarball, and split the
# output for DVD all in one step to avoid hefty intermediate files.
cd "${source}"
tar --create --preserve-permissions --to-stdout * |
    gpg --compress-algo none --no-use-agent --no-secmem-warning --symmetric |
    split --bytes 2240m --numeric-suffixes --suffix-length 1 - "${sink}/${archive}-${today}.tar.gpg."
