#!/bin/bash
#
# Archive each PostgreSQL database seperately into a compressed tarball in the
# $ARCHIVE_DIR directory. The user running this script must be a PostgreSQL
# superuser with an ident logon.
#
# This file is a part of Scripnix <https://github.com/yukondude/Scripnix/>.
# Written in 2008 by Dave Rogers <yukondude.com>
# This is free and unencumbered software released into the public domain.
# Refer to the LICENCE file for the not-so-fine print.

scriproot="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source $scriproot/sbin.bash

check_arg_count ${0} ${#} 0 0 '' ${1}

# Prepare the temporary dump directory and restrict access to the owner.
tmp_dir=$(mktemp -dt 'archive-XXXXXXXX')
chmod go= "${tmp_dir}"

# Dump each database separately. 
for database in $(psql --list | awk '{print $1}' | egrep --invert-match '^(List|Name|--|template|\||\(| )' | egrep --invert-match '^$') ; do
    pg_dump "${database}" | gzip > "${tmp_dir}/${database}.sql.gz"
done

# Prepare permissions on the dump file, whether or not it already exists.
dump_file="${ARCHIVE_DIR}/${PGSQL_DUMP_FILE}"
touch "${dump_file}"
chmod g=r,o= "${dump_file}"

# Combine the dump files into a single tarball and clean up temporary files.
cd "${tmp_dir}"
tar --create --file "${dump_file}" *gz 2>/dev/null
cd /
rm --force --recursive "${tmp_dir}"
